GreyLeche: Faiyaz Rafee, May Qiu, David Deng
APCS pd7
L04: Never Fear, Big O is Here!
2022-01-10

DISCO:
- Big-O is useful for determining the efficiency of an algorithm.

QCC:
- What other sorting algorithms are there and what are their time complexities?

BUB-QA
q0: If a pass requires no swaps, what do you know?
a0: The array is sorted
q1: After pass p, what do you know?
a1: The first p items are sorted
q2: How many passes are necessary to completely sort?
a2: length - 1

SEL-QA
q0: How many passes to sort n elements?
a0: n - 1 passes
q1: What do you know after pass p?
a1: p elements are confirmed to be in their final sorted location
q2: How do you know if sorted?
a2: When `# of elements - 1` passes are reached
q3: What does a pass boil down to?
a3: A pass boils down to:
- traversing the array from the beginning to index pass - 1
- finding the index at which the maximum value is present
- swapping the value at this maximum value index with the value at index pass
- incrementing pass so we ignore the confirmed index on our next traversal

INS-QA
q0: How many passes to sort n elements?
a0: n - 1 passes
q1: What do you know after pass p?
a1: Every element before and including the one at index p is part of the sorted section
q2: How will you know when sorted?
a2: After n - 1 passes are performed
q3: What constitutes a pass?
a3: Sorting first element of unsorted section into sorted section by decrementing index until it becomes sorted again
q4: What must you track?
a4: The boundary between the sorted and unsorted section